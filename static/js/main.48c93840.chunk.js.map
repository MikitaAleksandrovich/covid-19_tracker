{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","updatedDate","Date","toDateString","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","url","fetchData","a","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","App","state","fetchedData","this","setState","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48c93840.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\n    const updatedDate = new Date(lastUpdate).toDateString();\n\n    if(!confirmed) {\n        return 'Loading...';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.confirmed)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{updatedDate}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{updatedDate}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{updatedDate}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n};\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\n// fetch nessasary data \nexport const fetchData = async () => {\n    try {\n        const { data } = await axios.get(url);\n\n        return {\n            confirmed: data.confirmed,\n            recovered: data.recovered,\n            deaths: data.deaths,\n            lastUpdate: data.lastUpdate\n        }\n\n    } catch (error) {\n        \n    }\n};\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n\n        return modifiedData;\n        \n    } catch (error) {\n        \n    }\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = () => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async() => {\n            setDailyData(await fetchDailyData());\n        };\n\n        fetchAPI();\n    });\n\n    const lineChart = (\n        // if there is fetched data\n        dailyData.length ? \n            <Line \n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [\n                        {\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'Infected',\n                            borderColor: '#3333ff',\n                            fill: true,\n                        }, \n                        {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: 'red',\n                            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                            fill: true,\n                        }\n                    ],\n                }}\n            /> : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n};\n\nexport default Chart;","import React from 'react';\n\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = () => {\n    return (\n        <h1>CountryPicker</h1>\n    )\n};\n\nexport default CountryPicker;","import React, { Component } from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport { fetchData } from './api';\nimport styles from './App.module.css';\n\nclass App extends Component {\n\n    state = {\n        data: {},\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({\n            data: fetchedData,\n        })\n    }\n\n    render() {\n\n        const { data } = this.state;\n\n        return(\n            <div className={styles.container}>\n                <Cards data={data} />\n                <CountryPicker data={data} />\n                <Chart data={data} />\n            </div>\n        )\n    }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}