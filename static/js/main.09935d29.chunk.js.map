{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","updatedDate","Date","toDateString","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","index","key","App","state","fetchedData","setState","this","image","src","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09935d29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n\n    const updatedDate = new Date(lastUpdate).toDateString();\n\n    if(!confirmed) {\n        return 'Loading...';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.confirmed)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{updatedDate}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{updatedDate}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{updatedDate}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n};\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\n// fetch nessasary data \nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if(country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n    try {\n        const { data } = await axios.get(changeableUrl);\n\n        return {\n            confirmed: data.confirmed,\n            recovered: data.recovered,\n            deaths: data.deaths,\n            lastUpdate: data.lastUpdate\n        }\n\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        \n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n\n        return modifiedData;\n        \n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries }} = await axios.get(`${url}/countries`);\n\n        return countries.map((country) => country.name);\n        \n    } catch (error) {\n        console.log(error)\n    }\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data, country }) => {\n\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async() => {\n            setDailyData(await fetchDailyData());\n        };\n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        // if there is fetched data\n        dailyData.length ? \n            (<Line \n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [\n                        {\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'Infected',\n                            borderColor: '#3333ff',\n                            fill: true,\n                        }, \n                        {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: 'red',\n                            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                            fill: true,\n                        }\n                    ],\n                }}\n            />) : null\n    );\n\n    console.log(data);\n\n    const barChart = (\n        // if there is data\n        data.confirmed ?\n            (<Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgba(0, 255, 0, 0.5)',\n                            'rgba(255, 0, 0, 0.5)'\n                        ],\n                        data: [data.confirmed.value, data.recovered.value, data.deaths.value],\n                    }],\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current state in ${country}` },\n                }}\n            />) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n};\n\nexport default Chart;","import React, {useState, useEffect} from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        };\n\n        fetchAPI();\n        \n    }, [setFetchedCountries]);\n    \n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, index) => (\n                    <option key={index} value={country}>{country}</option>\n                    ))}\n            </NativeSelect>\n        </FormControl>\n    )\n};\n\nexport default CountryPicker;","import React, { Component } from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport { fetchData } from './api';\nimport styles from './App.module.css';\nimport image from './images/image.png';\n\nclass App extends Component {\n\n    state = {\n        data: {},\n        country: ''\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({\n            data: fetchedData,\n        })\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({\n            data: fetchedData,\n            country: country,\n        })\n    }\n\n    render() {\n\n        const { data, country } = this.state;\n\n        return(\n            <div className={styles.container}>\n                <img className={styles.image} src={image} />\n                <Cards data={data} />\n                <CountryPicker data={data} handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country} />\n            </div>\n        )\n    }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}